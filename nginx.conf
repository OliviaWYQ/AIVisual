
user www www;
#worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


#http {
#    include       mime.types;
#    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

#    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
#    keepalive_timeout  65;

    #gzip  on;

    #server {
        #listen       80;
        #server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
     #   error_page   500 502 503 504  /50x.html;
     #   location = /50x.html {
     #       root   html;
     #   }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    #}


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

#}
http{
	## demo listen 5060 proxy 4444 and 5000 ##
	#
	server {
	    listen 5060; 
	    server_name a.client;
	    access_log /usr/local/webserver/nginx/logs/a.access.log;
	    error_log /usr/local/webserver/nginx/logs/a.error.log;
	    root /usr/loacl/webserver/nginx/html;
	    index index.html index.htm index.php;

	    ## send request back to flask ##
	    location / {
		if ($request_method ~* "(GET|POST)") {
			add_header "Access-Control-Allow-Origin"  *;
	    	}
		proxy_pass  http://192.168.5.153:4444/	 ; 
		#Proxy Settings
 		proxy_redirect off;
	        proxy_set_header Host $host;
	        proxy_set_header X-Real-IP $remote_addr;
	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
	        proxy_max_temp_file_size 0;
	        proxy_connect_timeout 90;
	        proxy_send_timeout 90;
	        proxy_read_timeout 90;
	        proxy_buffer_size 4k;
	        proxy_buffers 4 32k;
	        proxy_busy_buffers_size 64k;
	    }
	    location /proxy {
		if ($request_method ~* "(GET|POST)") {
	                add_header "Access-Control-Allow-Origin"  *;
	        }
		rewrite ^.+proxy/?(.*)$ /$1 break;
	        proxy_pass  http://192.168.5.153:5000/ ;
		#Proxy Settings
		proxy_redirect off;
	        proxy_set_header Host $host;
	        proxy_set_header X-Real-IP $remote_addr;
	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
	        proxy_max_temp_file_size 0;
	        proxy_connect_timeout 90;
	        proxy_send_timeout 90;
	        proxy_read_timeout 90;
	        proxy_buffer_size 4k;
	        proxy_buffers 4 32k;
	        proxy_busy_buffers_size 64k;
	    }
	}
	## End of demo
	#
}
